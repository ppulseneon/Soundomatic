// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Soundomatic.Storage.Context;

#nullable disable

namespace Soundomatic.Storage.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Soundomatic.Models.KeyBinding", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<ushort>("Key")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PackId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PackId");

                    b.ToTable("KeyBindings");
                });

            modelBuilder.Entity("Soundomatic.Models.Sound", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AudioFormat")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("FileSizeBytes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<long>("SoundPackId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Volume")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(100);

                    b.HasKey("Id");

                    b.HasIndex("SoundPackId");

                    b.ToTable("Sounds");
                });

            modelBuilder.Entity("Soundomatic.Models.SoundPack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("IconData")
                        .HasColumnType("BLOB");

                    b.Property<string>("IconMimeType")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SoundPacks");
                });

            modelBuilder.Entity("Soundomatic.Models.KeyBinding", b =>
                {
                    b.HasOne("Soundomatic.Models.SoundPack", "Pack")
                        .WithMany()
                        .HasForeignKey("PackId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Pack");
                });

            modelBuilder.Entity("Soundomatic.Models.Sound", b =>
                {
                    b.HasOne("Soundomatic.Models.SoundPack", "SoundPack")
                        .WithMany("Sounds")
                        .HasForeignKey("SoundPackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SoundPack");
                });

            modelBuilder.Entity("Soundomatic.Models.SoundPack", b =>
                {
                    b.Navigation("Sounds");
                });
#pragma warning restore 612, 618
        }
    }
}
